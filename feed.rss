<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>[ OddMagnet.dev ]</title><description>Eine deutschsprachige Webseite rund um die Programmiersprache Swift</description><link>https://oddmagnet.dev</link><language>de</language><lastBuildDate>Sat, 5 Feb 2022 17:32:32 +0100</lastBuildDate><pubDate>Sat, 5 Feb 2022 17:32:32 +0100</pubDate><ttl>250</ttl><atom:link href="https://oddmagnet.dev/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://oddmagnet.dev/posts/PLACEHOLDER1</guid><title>Lorem Ipsum</title><description>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</description><link>https://oddmagnet.dev/posts/PLACEHOLDER1</link><pubDate>Sat, 5 Feb 2022 17:32:00 +0100</pubDate><content:encoded><![CDATA[<h1>Lorem Ipsum</h1><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent scelerisque consectetur nisi quis ultrices. Fusce aliquam ornare lorem. Etiam et sodales ligula. Ut a nulla quis tortor facilisis aliquam. Nulla facilisi. Quisque quis hendrerit orci. Aenean lorem quam, aliquam id purus et, consectetur eleifend lorem. Nulla sollicitudin augue urna. Nullam venenatis risus neque, id mattis leo aliquet nec. Praesent varius nisi in nisi finibus, quis gravida nibh congue. Suspendisse condimentum nulla nec sem lobortis, nec commodo risus condimentum. Donec eget massa justo. Duis mattis efficitur tortor.</p><p>Ut interdum, purus vitae convallis blandit, purus est rhoncus justo, sit amet sollicitudin magna dui gravida libero. Donec eu viverra quam. Nulla vehicula massa nec mi ultricies hendrerit. Quisque lobortis enim ut nulla lobortis, porta condimentum mi dictum. Integer urna odio, aliquet quis nisl non, cursus vehicula nisi. Proin porttitor sapien ac ornare elementum. Donec laoreet non urna rutrum venenatis. Proin quis placerat libero. Etiam dui augue, sollicitudin nec blandit sit amet, laoreet nec nibh. Morbi nibh eros, varius eu bibendum nec, faucibus posuere nisl. Maecenas quis dolor convallis, ultrices dui ac, suscipit odio. Cras hendrerit mauris in magna pharetra gravida vel ut risus. Donec vehicula massa ut mi posuere tincidunt. Ut pellentesque urna tortor.</p><p>Aliquam erat volutpat. Praesent auctor justo vitae placerat aliquet. Maecenas quis ipsum laoreet, malesuada mauris ac, tincidunt tortor. Pellentesque lacinia viverra enim nec mattis. Aenean id ipsum ut dui egestas egestas nec id risus. Integer mauris odio, feugiat sit amet nisl eu, congue consequat est. Mauris rhoncus magna dui, a gravida dui volutpat rhoncus. Praesent vulputate ex at erat placerat imperdiet. Donec ac sollicitudin tortor. Donec id aliquam erat. Aliquam erat volutpat. Suspendisse erat felis, lobortis eget lacinia vitae, varius in arcu. Praesent sit amet eros sed ligula ultrices gravida. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris eget ex risus.</p><p>Quisque neque velit, consectetur eget pharetra nec, maximus eget ante. Cras mauris mi, sollicitudin eget vestibulum vel, tempus eu velit. Sed nec nisl porttitor, volutpat felis sed, venenatis lorem. Pellentesque facilisis interdum nunc vel viverra. Duis aliquam dui eros, at luctus sapien porta quis. Nullam blandit interdum tempor. Nulla facilisi. Vestibulum pharetra velit sit amet erat scelerisque egestas. Curabitur in odio nunc. Ut turpis elit, cursus et lectus a, pharetra tristique nulla. Duis libero est, pharetra non justo eget, elementum faucibus ante. Vestibulum varius metus sodales odio vestibulum bibendum.</p><p>Integer at ornare justo, at tempor neque. Vivamus aliquet purus a rutrum mattis. Nulla sodales lectus et felis malesuada imperdiet. Duis nec turpis lectus. Fusce laoreet orci non laoreet suscipit. Mauris lacinia molestie enim, et laoreet ligula pellentesque in. Curabitur vel augue id est laoreet bibendum. Fusce efficitur lorem massa. Mauris eu maximus mi. Pellentesque tempus, felis et interdum ullamcorper, diam tellus hendrerit massa, ac ullamcorper nulla quam a risus. Nulla a velit non magna pretium tincidunt. Nulla tempus, libero vel pulvinar finibus, odio tellus fringilla leo, sit amet pretium lorem tellus at mi. Maecenas tincidunt enim dolor, vitae porta magna feugiat eu.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://oddmagnet.dev/posts/PLACEHOLDER2</guid><title>Lorem Ipsum</title><description>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</description><link>https://oddmagnet.dev/posts/PLACEHOLDER2</link><pubDate>Sat, 5 Feb 2022 17:32:00 +0100</pubDate><content:encoded><![CDATA[<h1>Lorem Ipsum</h1><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent scelerisque consectetur nisi quis ultrices. Fusce aliquam ornare lorem. Etiam et sodales ligula. Ut a nulla quis tortor facilisis aliquam. Nulla facilisi. Quisque quis hendrerit orci. Aenean lorem quam, aliquam id purus et, consectetur eleifend lorem. Nulla sollicitudin augue urna. Nullam venenatis risus neque, id mattis leo aliquet nec. Praesent varius nisi in nisi finibus, quis gravida nibh congue. Suspendisse condimentum nulla nec sem lobortis, nec commodo risus condimentum. Donec eget massa justo. Duis mattis efficitur tortor.</p><p>Ut interdum, purus vitae convallis blandit, purus est rhoncus justo, sit amet sollicitudin magna dui gravida libero. Donec eu viverra quam. Nulla vehicula massa nec mi ultricies hendrerit. Quisque lobortis enim ut nulla lobortis, porta condimentum mi dictum. Integer urna odio, aliquet quis nisl non, cursus vehicula nisi. Proin porttitor sapien ac ornare elementum. Donec laoreet non urna rutrum venenatis. Proin quis placerat libero. Etiam dui augue, sollicitudin nec blandit sit amet, laoreet nec nibh. Morbi nibh eros, varius eu bibendum nec, faucibus posuere nisl. Maecenas quis dolor convallis, ultrices dui ac, suscipit odio. Cras hendrerit mauris in magna pharetra gravida vel ut risus. Donec vehicula massa ut mi posuere tincidunt. Ut pellentesque urna tortor.</p><p>Aliquam erat volutpat. Praesent auctor justo vitae placerat aliquet. Maecenas quis ipsum laoreet, malesuada mauris ac, tincidunt tortor. Pellentesque lacinia viverra enim nec mattis. Aenean id ipsum ut dui egestas egestas nec id risus. Integer mauris odio, feugiat sit amet nisl eu, congue consequat est. Mauris rhoncus magna dui, a gravida dui volutpat rhoncus. Praesent vulputate ex at erat placerat imperdiet. Donec ac sollicitudin tortor. Donec id aliquam erat. Aliquam erat volutpat. Suspendisse erat felis, lobortis eget lacinia vitae, varius in arcu. Praesent sit amet eros sed ligula ultrices gravida. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris eget ex risus.</p><p>Quisque neque velit, consectetur eget pharetra nec, maximus eget ante. Cras mauris mi, sollicitudin eget vestibulum vel, tempus eu velit. Sed nec nisl porttitor, volutpat felis sed, venenatis lorem. Pellentesque facilisis interdum nunc vel viverra. Duis aliquam dui eros, at luctus sapien porta quis. Nullam blandit interdum tempor. Nulla facilisi. Vestibulum pharetra velit sit amet erat scelerisque egestas. Curabitur in odio nunc. Ut turpis elit, cursus et lectus a, pharetra tristique nulla. Duis libero est, pharetra non justo eget, elementum faucibus ante. Vestibulum varius metus sodales odio vestibulum bibendum.</p><p>Integer at ornare justo, at tempor neque. Vivamus aliquet purus a rutrum mattis. Nulla sodales lectus et felis malesuada imperdiet. Duis nec turpis lectus. Fusce laoreet orci non laoreet suscipit. Mauris lacinia molestie enim, et laoreet ligula pellentesque in. Curabitur vel augue id est laoreet bibendum. Fusce efficitur lorem massa. Mauris eu maximus mi. Pellentesque tempus, felis et interdum ullamcorper, diam tellus hendrerit massa, ac ullamcorper nulla quam a risus. Nulla a velit non magna pretium tincidunt. Nulla tempus, libero vel pulvinar finibus, odio tellus fringilla leo, sit amet pretium lorem tellus at mi. Maecenas tincidunt enim dolor, vitae porta magna feugiat eu.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://oddmagnet.dev/posts/PLACEHOLDER3</guid><title>Lorem Ipsum</title><description>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</description><link>https://oddmagnet.dev/posts/PLACEHOLDER3</link><pubDate>Sat, 5 Feb 2022 17:32:00 +0100</pubDate><content:encoded><![CDATA[<h1>Lorem Ipsum</h1><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent scelerisque consectetur nisi quis ultrices. Fusce aliquam ornare lorem. Etiam et sodales ligula. Ut a nulla quis tortor facilisis aliquam. Nulla facilisi. Quisque quis hendrerit orci. Aenean lorem quam, aliquam id purus et, consectetur eleifend lorem. Nulla sollicitudin augue urna. Nullam venenatis risus neque, id mattis leo aliquet nec. Praesent varius nisi in nisi finibus, quis gravida nibh congue. Suspendisse condimentum nulla nec sem lobortis, nec commodo risus condimentum. Donec eget massa justo. Duis mattis efficitur tortor.</p><p>Ut interdum, purus vitae convallis blandit, purus est rhoncus justo, sit amet sollicitudin magna dui gravida libero. Donec eu viverra quam. Nulla vehicula massa nec mi ultricies hendrerit. Quisque lobortis enim ut nulla lobortis, porta condimentum mi dictum. Integer urna odio, aliquet quis nisl non, cursus vehicula nisi. Proin porttitor sapien ac ornare elementum. Donec laoreet non urna rutrum venenatis. Proin quis placerat libero. Etiam dui augue, sollicitudin nec blandit sit amet, laoreet nec nibh. Morbi nibh eros, varius eu bibendum nec, faucibus posuere nisl. Maecenas quis dolor convallis, ultrices dui ac, suscipit odio. Cras hendrerit mauris in magna pharetra gravida vel ut risus. Donec vehicula massa ut mi posuere tincidunt. Ut pellentesque urna tortor.</p><p>Aliquam erat volutpat. Praesent auctor justo vitae placerat aliquet. Maecenas quis ipsum laoreet, malesuada mauris ac, tincidunt tortor. Pellentesque lacinia viverra enim nec mattis. Aenean id ipsum ut dui egestas egestas nec id risus. Integer mauris odio, feugiat sit amet nisl eu, congue consequat est. Mauris rhoncus magna dui, a gravida dui volutpat rhoncus. Praesent vulputate ex at erat placerat imperdiet. Donec ac sollicitudin tortor. Donec id aliquam erat. Aliquam erat volutpat. Suspendisse erat felis, lobortis eget lacinia vitae, varius in arcu. Praesent sit amet eros sed ligula ultrices gravida. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris eget ex risus.</p><p>Quisque neque velit, consectetur eget pharetra nec, maximus eget ante. Cras mauris mi, sollicitudin eget vestibulum vel, tempus eu velit. Sed nec nisl porttitor, volutpat felis sed, venenatis lorem. Pellentesque facilisis interdum nunc vel viverra. Duis aliquam dui eros, at luctus sapien porta quis. Nullam blandit interdum tempor. Nulla facilisi. Vestibulum pharetra velit sit amet erat scelerisque egestas. Curabitur in odio nunc. Ut turpis elit, cursus et lectus a, pharetra tristique nulla. Duis libero est, pharetra non justo eget, elementum faucibus ante. Vestibulum varius metus sodales odio vestibulum bibendum.</p><p>Integer at ornare justo, at tempor neque. Vivamus aliquet purus a rutrum mattis. Nulla sodales lectus et felis malesuada imperdiet. Duis nec turpis lectus. Fusce laoreet orci non laoreet suscipit. Mauris lacinia molestie enim, et laoreet ligula pellentesque in. Curabitur vel augue id est laoreet bibendum. Fusce efficitur lorem massa. Mauris eu maximus mi. Pellentesque tempus, felis et interdum ullamcorper, diam tellus hendrerit massa, ac ullamcorper nulla quam a risus. Nulla a velit non magna pretium tincidunt. Nulla tempus, libero vel pulvinar finibus, odio tellus fringilla leo, sit amet pretium lorem tellus at mi. Maecenas tincidunt enim dolor, vitae porta magna feugiat eu.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://oddmagnet.dev/posts/Eine%20deutsche%20Webseite%20ueber%20Swift,%20erstellt%20mit%20Swift%20-%20Teil%201</guid><title>Eine deutsche Webseite über Swift, erstellt mit Swift - Teil 1</title><description>Wie diese Seite erstellt wurde, Teil 1.</description><link>https://oddmagnet.dev/posts/Eine%20deutsche%20Webseite%20ueber%20Swift,%20erstellt%20mit%20Swift%20-%20Teil%201</link><pubDate>Sat, 5 Feb 2022 16:48:30 +0100</pubDate><content:encoded><![CDATA[<h1>Eine deutsche Webseite über Swift, erstellt mit Swift - Teil 1</h1><h2>Ein kleines Vorwort</h2><p>Bevor es zum eigentlich Post geht wollte ich erstmal kurz meine Gründe für die Erstellung dieser Webseite nennen, damit wisst ihr (die Leser) direkt womit ihr hier rechnen könnt:</p><ul><li>Ich wollte gerne eine eigene Webseite haben, die mithilfe von <code>Markdown</code> Dateien und Swift erstellt wird</li><li>Andere deutschsprachige Seiten zu Swift scheinen inaktiv zu sein, daher die Entscheidung auf deutsch zu schreiben</li><li>Bisher kenne ich persönlich keine anderen deutschen Swift-Entwickler, vielleicht lerne ich so ja ein paar kennen</li><li>Ich bin kein Experte was iOS-Entwicklung angeht, dennoch möchte ich Sachen die ich lerne und interessant finde hier teilen, Feedback ist natürlich gerne gesehen</li><li>Hoffentlich hilft diese Sideproject auch ein wenig dabei eine Firma zu finden die mir trotz meiner Krankheitsgeschichte eine Chance gibt :)</li></ul><h2>Erste Schritte</h2><p>Eine letzte Sache noch bevor es losgeht, diese Reihe an Blogposts ist mehr eine Zusammenfassung meiner Auseinandersetzung mit dem <a href="https://github.com/JohnSundell/Publish">Publish</a> Projekt von <a href="https://github.com/JohnSundell/">John Sundell</a>, wer also lieber etwas ausführlicheres auf englisch lesen möchte sollte dort mal reinschauen.</p><h3>Publish installieren</h3><p>Grundsätzlich hat man zwei Möglichkeiten wie man Publish nutzen kann, entweder man fügt es über den Swift Package Manager zu einem bestehenden Projekt hinzu, oder man nutzt das Kommandozeilen Tool um ein neues Projekt zu erstellen. Für dieses Projekt nutze ich letztere Möglichkeit.</p><p>Das Kommandozeilen Tool kann man auf 2 Wegen installieren, durch das klonen des <a href="https://github.com/JohnSundell/Publish">Publish</a> Repositories und dem ausführen der <code>makefile</code>:</p><pre><code class="language-bash">$ git clone https://github.com/JohnSundell/Publish.git
$ cd Publish
$ make
</code></pre><p>Oder durch die Installation mit <a href="https://brew.sh">Brew</a>.</p><pre><code class="language-bash">$ brew install publish
</code></pre><p>Persönlich bin ich ein großer Fan von Brew, daher habe ich selber diese Variante gewählt.</p><h3>Ein neues Projekt erstellen</h3><p>Nachdem das Kommandozeilen Tool installiert ist braucht es nur noch einen neuen, leeren Ordner für das Projekt</p><pre><code class="language-bash">$ mkdir PROJEKT-NAME
$ cd PROJEKT-NAME
$ publish new
</code></pre><p>Jetzt kann man die von Publish generierte <code>Package.swift</code> Datei öffnen</p><pre><code class="language-bash">$ open Package.swift
</code></pre><p>Alternativ kann man die Datei natürlich auch einfach doppelklicken.</p><p>Jetzt kann man das Projekt auch schon direkt ausführen, mit <code>⌘+R</code> oder über <code>Product &gt; Run</code>. Wenn man das zum ersten Mal macht kommt eventuell noch eine kurze Abfrage für die Nutzung der "Command Line Tools" und noch eine für den Zugriff auf den Ordner in dem der Projekt-Ordner ist.</p><p>Wenn alles geklappt hat sollte man in Xcode folgenden Output bekommen</p><pre><code>Publishing PROJEKTNAME (6 steps)
[1/6] Copy 'Resources' files
[2/6] Add Markdown files from 'Content' folder
[3/6] Sort items
[4/6] Generate HTML
[5/6] Generate RSS feed
[6/6] Generate site map
✅ Successfully published PROJEKTNAME
Program ended with exit code: 0
</code></pre><h3>Lokal entwickeln und testen</h3><p>Damit man die Webseite auch direkt anschauen kann hat Publish auch ein Kommando:</p><pre><code class="language-bash">$ publish run
</code></pre><p>Beim ersten Ausführen ladet sich das Tool erstmal so einige Dateien von Github, kompiliert diese und generiert schlussendlich auch die Webseite, diese kann man dann über <code>http://localhost:8000</code> erreichen.</p><p>Um den Inhalt der Seiten neu zu generieren während der Server läuft nutzt man einfach wieder <code>Product &gt; Run</code> in Xcode.</p><h3>Webseite online verfügbar machen</h3><p>Um die Webseite dann im Internet verfügbar zu machen nutzt man den <code>deploy</code> schritt in der Publishing Pipeline. In der <code>main.swift</code> Datei (im <code>Sources &gt; PROJEKTNAME</code> Ordner) ändert man dazu</p><pre><code class="language-swift">try PROJEKTNAME().publish(withTheme: .foundation)
</code></pre><p>zu</p><pre><code class="language-swift">try PROJEKTNAME().publish(using: [
    .copyResources(),
    .addMarkdownFiles(),
    .sortItems(by: \.date),
    .generateHTML(withTheme: .foundation),
    .generateRSSFeed(including: [.posts]),
    .generateSiteMap(),
    .deploy(using: .gitHub("USERNAME/PROJEKT-NAME"), branch: "main")
])
</code></pre><p>Im obigen Beispiel wurden einfach alle Schritte die bei <code>.publish(withTheme: .foundation)</code> ausgeführt wurden auch wieder gelistet. Generell sind die Schritte optional, wer beispielsweise kein RSS Feed haben will kann den Schritt dafür einfach weglassen.</p><p>Der für diesen Teil des Beitrags relevante <code>deploy</code> Schritt wird allerdings nur ausgeführt wenn das <code>--deploy</code> flag vorhanden ist. Das kann man dann entweder direkt über die Kommandozeile machen:</p><pre><code class="language-bash">$ publish deploy
</code></pre><p>Oder indem man das <code>Scheme</code> in Xcode ändert, <code>Product &gt; Scheme &gt; Edit Scheme…</code>.</p><p>Persönlich nutze ich dafür immer die Kommandozeile, denn so gehe ich wirklich sicher dass ich nicht aus Versehen irgendwelche Änderungen veröffentliche bevor diese wirklich fertig sind.</p><p>Eine Sache die ich für meine Webseite noch zusätzlich gemacht habe, ist ein weiterer Branch, <code>author</code>, in dem sich dann sowohl die <code>.md</code> Dateien wie auch die Quelldateien für meine Webseite befinden. Änderungen kann ich so erst lokal testen bis ich zufrieden bin, dann den <code>author</code> branch comitten und über <code>publish deploy</code> wird die generierte Seite dann auf den <code>main</code> branch gepushed.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://oddmagnet.dev/posts/Eine%20deutsche%20Webseite%20ueber%20Swift,%20erstellt%20mit%20Swift%20-%20Teil%202</guid><title>Eine deutsche Webseite über Swift, erstellt mit Swift - Teil 2</title><description>Wie diese Seite erstellt wurde, Teil 2.</description><link>https://oddmagnet.dev/posts/Eine%20deutsche%20Webseite%20ueber%20Swift,%20erstellt%20mit%20Swift%20-%20Teil%202</link><pubDate>Sat, 5 Feb 2022 16:48:25 +0100</pubDate><content:encoded><![CDATA[<h1>Eine deutsche Webseite über Swift, erstellt mit Swift - Teil 2</h1><p>In diesem Teil geht es um die Installation und Konfiguration des Splash Plugins für Publish, dieses findet man (unter anderem) hier: <a href="https://github.com/topics/publish-plugin?l=swift">Publish Community Plugins</a>. Wer selber ein Plugin für Publish entwickeln möchte sollte auf jeden Fall das <code>publish-plugin</code> topic zu dem Repository hinzufügen (siehe <a href="https://help.github.com/en/github/administering-a-repository/classifying-your-repository-with-topics#adding-topics-to-your-repository">hier</a>), dadurch ist das Plugin direkt bei den anderen Community Plugins aufzufinden.</p><h2>Installation am Beispiel von Splash</h2><p>Um ein Plugin zu nutzen muss man es zuerst zu den Dependencies in der <code>Package.swift</code> Datei hinzufügen, diese sieht direkt nach der Nutzung von <code>publish new</code> erstmal so aus:</p><pre><code class="language-swift">let package = Package(
    name: "OddmagnetDev",
    products: [
        .executable(
            name: "OddmagnetDev",
            targets: ["OddmagnetDev"]
        )
    ],
    dependencies: [
        .package(name: "Publish", url: "https://github.com/johnsundell/publish.git", from: "0.7.0")
    ],
    targets: [
        .target(
            name: "OddmagnetDev",
            dependencies: ["Publish"]
        )
    ]
)
</code></pre><p>Am Beispiel des <a href="https://github.com/JohnSundell/SplashPublishPlugin">Splash Plugins</a> sähe das dann so aus:</p><pre><code class="language-swift">let package = Package(
    /* Code ausgelassen */ 
    dependencies: [
        .package(name: "Publish", url: "https://github.com/johnsundell/publish.git", from: "0.7.0"),
        .package(name: "SplashPublishPlugin", url: "https://github.com/johnsundell/splashpublishplugin", from: "0.1.0")
    ],
    targets: [
        .target(
            name: "OddmagnetDev",
            dependencies: [
                "Publish",
                "SplashPublishPlugin"
            ]
        )
    ]
)
</code></pre><p>Das allein reicht natürlich nicht aus, damit das Plugin auch was macht muss es in der publishing pipeline genutzt werden, in der <code>main.swift</code>:</p><pre><code class="language-swift">/* Vorherige imports ausgelassen */
import SplashPublishPlugin

struct OddmagnetDev: Website { /*...*/ }

try OddmagnetDev().publish(using: [
    .installPlugin(.splash(withClassPrefix: "")),
  	/* alle weiteren Schritte */
])
</code></pre><h2>CSS Datei für Splash hinzufügen</h2><p>Im Falle von Splash wird auch noch eine <code>styles.css</code> Datei benötigt, für einen guten Startpunk empfehle ich die <a href="https://github.com/JohnSundell/Splash/blob/master/Examples/sundellsColors.css">Beispiel CSS Datei</a> von John Sundell.</p><p>Diese kann man leider nicht ohne weiteres nutzen, solange man die <code>Foundation</code> Theme verwendet. Idealerweise erstellt man sich seine eigene Theme in der die CSS Datei dann genutzt wird.</p><p>Da ich in einem späteren Beitrag über die Erstellung einer eigenen Theme gehen will zeige ich in diesem Artikel nur einen "Workaround" wie man die CSS Datei für das Syntax Highlighting auch mit dem <code>Foundation</code> Theme "nutzen" kann.</p><p>Zuerst erstellt man einen neuen Ordner für die "eigene" Theme <code>Resources &gt; ThemeName</code>, in diesem kommt dann die CSS Datei für das Publish plugin, ich habe sie einfach <code>splash.css</code> genannt. Zusätzlich erstellt man auch noch eine CSS Datei für die eigentliche Theme, <code>styles.css</code>, in diese kopiert man dann den Inhalt der von <code>Publish &gt; Resources &gt; FoundationTheme &gt; styles.css</code>.</p><p>Als nächstes erstellt man einen Ordner für den Code der "eigenen" Theme <code>Sources &gt; ProjektName &gt; ThemeName</code>, sowie eine <code>Theme+ThemeName.swift</code> Datei. Dort kopiert man den Inhalt von <code>Publish &gt; Sources &gt; Publish &gt; API &gt; Theme+Foundation.swift</code> rein.</p><p>Nun muss man diese Datei noch ein wenig anpassen, zum einen wird ein <code>import Publish</code> benötigt, zum anderen sollte man den Namen für die Theme ändern, sowie die Pfade für die CSS Dateien anpassen, das sollte dann so aussehen:</p><pre><code class="language-swift">import Plot
import Publish

public extension Theme {
    static var themeName: Self { // hier den Namen der Variable ändern
        Theme(
            htmlFactory: ThemeNameHTMLFactory(),	// den Factory Namen auch entsprechend anpassen
            resourcePaths: [	// und die Pfade für die CSS Dateien anpassen
                "Resources/ThemeName/styles.css",
                "Resources/ThemeName/splash.css"
                ]
        )
    }
}

// Die Factory selber muss natürlich auch umbenannt werden
private struct ThemeNameHTMLFactory&lt;Site: Website&gt;: HTMLFactory { /*…*/ }
</code></pre><p>Zuletzt muss man die <code>makeItemHTML</code> Funktion in der <code>ThemeNameHTMLFactory</code> anpassen, damit diese auch die CSS Dateien verlinkt. Das sollte dann so aussehen:</p><pre><code class="language-swift">func makeItemHTML(for item: Item&lt;Site&gt;,
                  context: PublishingContext&lt;Site&gt;) throws -&gt; HTML {
  HTML(
    .lang(context.site.language),
    .head(
      for: item,
      on: context.site,
      stylesheetPaths: [
        "/styles.css",
        "/splash.css"
      ]
    ),
    /* Code ausgelassen */
  )
}
</code></pre><p>Sollte ihr die CSS Datei für das Splash Plugin anders genannt haben müsst ihr das natürlich auch anpassen.</p><p>Wenn man die Seite nun neu generiert (<code>⌘ + R</code>) sieht man: nichts. Denn bisher nutzt die Publishing Pipeline immer noch die Foundation Theme. In der <code>main.swift</code> muss man noch das <code>withTheme: .foundation</code> ändern:</p><pre><code class="language-swift">try OddmagnetDev().publish(using: [
    .installPlugin(.splash(withClassPrefix: "")),
  	/* Schritte ausgelassen */ 
    .generateHTML(withTheme: .themeName),
  	/* Schritte ausgelasse */
])
</code></pre><p>Noch ein letztes Mal die Seite neu generieren und die Code-Blöcke sollten nun schön markiert sein.</p><p>In dem nächsten Artikel geht es dann darum, wie man sich eine eigene Theme erstellt.</p>]]></content:encoded></item></channel></rss>